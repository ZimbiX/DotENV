%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: DotENV
file_extensions:
  - .env
  - .env.dist
  - .env.local
  - .env.sample
  - .env.example
  - .env.test
  - .env.test.local
  - .env.testing
  - .env.dev
  - .env.development
  - .env.development.local
  - .env.prod
  - .env.production
  - .env.production.local
  - .env.dusk.local
  - .env.staging
  - .env.default
  - .env.defaults
  - .envrc
  - .flaskenv
scope: source.env
contexts:
  main:
    - comment: "Comments - starts with #"
      match: (#).*$\n?
      scope: comment.line.number-sign.env
      captures:
        1: punctuation.definition.comment.env
    - comment: Strings (double)
      match: (\")
      captures:
        1: punctuation.definition.string.begin.env
      push:
        - meta_scope: string.quoted.double.env
        - match: (\")
          captures:
            1: punctuation.definition.string.end
          pop: true
        - include: interpolation
        - include: variable
        - include: escape-characters
    - comment: Strings (single)
      match: (\')
      captures:
        1: punctuation.definition.string.begin.env
      push:
        - meta_scope: string.quoted.single.env
        - match: (\')
          captures:
            1: punctuation.definition.string.end
          pop: true
    - comment: Assignment Operator
      match: '(?<=[\w])\s?='
      scope: keyword.operator.assignment.env
    - comment: Variable
      match: '([\w]+)(?=\s?\=)'
      scope: variable.other.env
    - comment: Keywords
      match: (?i)\s?(export)
      scope: keyword.other.env
    - comment: Constants
      match: (?i)(?<=\=)\s?(true|false|null)
      scope: constant.language.env
    - comment: Numeric
      match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b'
      scope: constant.numeric.env
  escape-characters:
    - match: '\\[nrt\\\$\"\'']'
      scope: constant.character.escape.env
  interpolation:
    - comment: 'Template Syntax: "foo ${bar} {$baz}"'
      match: '(\$\{|\{)'
      captures:
        1: string.interpolated.env keyword.other.template.begin.env
      push:
        - match: '(\})'
          captures:
            1: string.interpolated.env keyword.other.template.end.env
          pop: true
        - match: '(?x)(\$+)?([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?\b)'
          captures:
            1: punctuation.definition.variable.env variable.other.env
            2: variable.other.env
  variable:
    - match: '(?x)(\$+)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?\b)'
      captures:
        1: punctuation.definition.variable.env variable.other.env
        2: variable.other.env
